import argparse
import pyfiglet
import sys
import signal
import scapy.all as scapy 
from termcolor import colored

ascii_banner = pyfiglet.figlet_format("DNS SNIFFER")
print(colored(ascii_banner,'yellow'))

def def_handler(sig, frame):
    print(colored(f"\n[!] Saliendo del programa...",'red'))
    sys.exit(1)

signal.signal(signal.SIGINT, def_handler) #ctrl + c

def get_arguments():
    parser = argparse.ArgumentParser(description='DNS Sniffer')
    parser.add_argument("-i", "--interface", dest="interface", required=True, help="Interfaz de red para sniffear consultas DNS")

    return parser.parse_args()

def process_dns_packet(packet):
    if packet.haslayer(scapy.DNSQR):
        domain = packet[scapy.DNSQR].qname.decode()

        exclude_words = ["google", "cloud", "bing", "static", "sensic"]

        if domain not in domains_seen and not any(keyword in domain for keyword in exclude_words):
            domains_seen.add(domain)
            print(colored(f"\n[+] Dominio: {domain}",'green'))

def sniff(interface):
    scapy.sniff(iface=interface, filter="udp and port 53", prn=process_dns_packet, store=0)

def main():

    arguments = get_arguments()
    sniff(arguments.interface)

if __name__ == '__main__':
    global domains_seen
    domains_seen = set()

    main()